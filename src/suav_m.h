//
// Generated file, do not edit! Created by nedtool 5.0 from suav.msg.
//

#ifndef __SUAV_M_H
#define __SUAV_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0500
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>suav.msg:12</tt> by nedtool.
 * <pre>
 * message SuavMsg
 * {
 *     bool active;
 *     double height;
 *     double angle;
 *     double energy;
 *     int charges;
 * }
 * </pre>
 */
class SuavMsg : public ::omnetpp::cMessage
{
  protected:
    bool active;
    double height;
    double angle;
    double energy;
    int charges;

  private:
    void copy(const SuavMsg& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const SuavMsg&);

  public:
    SuavMsg(const char *name=nullptr, int kind=0);
    SuavMsg(const SuavMsg& other);
    virtual ~SuavMsg();
    SuavMsg& operator=(const SuavMsg& other);
    virtual SuavMsg *dup() const {return new SuavMsg(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b);

    // field getter/setter methods
    virtual bool getActive() const;
    virtual void setActive(bool active);
    virtual double getHeight() const;
    virtual void setHeight(double height);
    virtual double getAngle() const;
    virtual void setAngle(double angle);
    virtual double getEnergy() const;
    virtual void setEnergy(double energy);
    virtual int getCharges() const;
    virtual void setCharges(int charges);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const SuavMsg& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, SuavMsg& obj) {obj.parsimUnpack(b);}


#endif // ifndef __SUAV_M_H

